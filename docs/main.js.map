{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/algorithms/sort.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/main-nav/main-nav.component.ts","./src/app/main-nav/main-nav.component.html","./src/app/pages/crypto/crypto.component.ts","./src/app/pages/crypto/crypto.component.html","./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/pages/search/Node/node.component.ts","./src/app/pages/search/Node/node.component.html","./src/app/pages/search/search.component.ts","./src/app/pages/search/search.component.html","./src/app/pages/sort/sort.component.ts","./src/app/pages/sort/sort.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","// Implementation in ts\r\n// O(N^2) Algorithms\r\n/*\r\n * Time Complexity: O(N^2)\r\n * Inplace, not stable\r\n */\r\nfunction* SelectionSort(A: number[]) {\r\n  let minIndex;\r\n  for (let i = 0; i < A.length; i++) {\r\n    minIndex = i;\r\n    for (let j = i + 1; j < A.length; j++) {\r\n      if (A[j] < A[minIndex]) {\r\n        // minIndex represents the next smallest element\r\n        minIndex = j;\r\n      }\r\n      // Yield the array, current index and comparing index\r\n      let currentIdx = i;\r\n      let comparingIdx = j;\r\n      yield { A, currentIdx, comparingIdx };\r\n    }\r\n    const temp = A[i];\r\n    A[i] = A[minIndex];\r\n    A[minIndex] = temp;\r\n  }\r\n  return A;\r\n}\r\n\r\n/**\r\n * Idea is to loop through all elements, keeping a left sorted subarray,\r\n * then shift the element to its sorted position in the left subarray,\r\n * shifting sorted elements in the subarray upwards if needed.\r\n * This creates a best case of O(N) if all the elements are already sorted, and worst case of O(N^2) if the list is reversed\r\n * @param A\r\n */\r\nfunction* InsertionSort(A: number[]) {\r\n  for (let i = 0; i < A.length; i++) {\r\n    let v = A[i];\r\n    let j = i - 1;\r\n    while (j >= 0 && v < A[j]) {\r\n      A[j + 1] = A[j];\r\n      j = j - 1;\r\n      let currentIdx = i;\r\n      let comparingIdx = j;\r\n      yield { A, currentIdx, comparingIdx };\r\n    }\r\n    A[j + 1] = v;\r\n    let currentIdx = i;\r\n    let comparingIdx = j;\r\n    yield { A, currentIdx, comparingIdx };\r\n  }\r\n  return A;\r\n}\r\n\r\n// O(NLOG(N)) Algorithms\r\n\r\nfunction* GenMergeSort(A: number[]) {\r\n  // Sort the algorithm and return steps]\r\n  const results: Steps[] = [];\r\n\r\n  // Async/await for the quicksort to finish before yielding values\r\n  let fullArray = A.slice();\r\n  MergeSort(A, results, fullArray, 0);\r\n  console.log(\"MergeSort Complete\", fullArray);\r\n\r\n  while (results.length > 0) {\r\n    let a = results.shift();\r\n    yield a;\r\n  }\r\n}\r\n\r\n/**\r\n * MergeSort\r\n * @param Array\r\n */\r\nfunction MergeSort(\r\n  A: number[],\r\n  results: Steps[],\r\n  fullArray: number[],\r\n  depth: number\r\n) {\r\n  if (A.length > 1) {\r\n    // add one to depth\r\n    depth++;\r\n    let currentDepth = depth;\r\n    let insertionsLeft = Math.pow(2, currentDepth - 1);\r\n    let counter = 0;\r\n    let half = Math.floor(A.length / 2);\r\n    // Slice used to not change original array A\r\n    let B = A.slice(0, half);\r\n    let C = A.slice(half, A.length);\r\n    let left = MergeSort(B, results, fullArray, depth);\r\n    let right = MergeSort(C, results, fullArray, depth);\r\n\r\n    // Visualization Code:\r\n    // Return 'full-array' by concating the subarrays into the correct 'partitions'\r\n    let temp: number[] = Merge2(left, right, results, fullArray);\r\n    // Replace part of the fullarray by calculating index based on 1. depth\r\n    let numPartitionsAtDepth = Math.pow(2, currentDepth - 1);\r\n    let indexFactor = fullArray.length / numPartitionsAtDepth;\r\n\r\n    if (insertionsLeft > 0) {\r\n      fullArray.splice(counter * indexFactor, temp.length, ...temp);\r\n      console.log(insertionsLeft, counter, currentDepth, fullArray);\r\n      const step: Steps = {\r\n        A: fullArray.slice(),\r\n      };\r\n      results.push(step);\r\n      counter++;\r\n      insertionsLeft--;\r\n    }\r\n\r\n    return temp;\r\n  }\r\n  // Base Case: A is a single element just return\r\n  else {\r\n    return A;\r\n  }\r\n}\r\n\r\nfunction Merge(B: number[], C: number[], A: number[], fullArray) {\r\n  let i = 0,\r\n    j = 0,\r\n    k = 0;\r\n  while (i < B.length && j < C.length) {\r\n    if (B[i] <= C[j]) {\r\n      // yield { A, i, j };\r\n      A[k] = B[i];\r\n      i++;\r\n    } else {\r\n      // yield { A, i, j };\r\n      A[k] = C[j];\r\n      j++;\r\n    }\r\n    k++;\r\n  }\r\n  // If we looped through all B array, then all of B is smaller than C and we copy C to the upper half\r\n  // Splice array A from index k to length of 'smaller array', updating it\r\n  var C = C.splice(j);\r\n  var B = B.splice(i);\r\n  console.log(\"DEBUG: Merged A\");\r\n  console.log(B, C);\r\n  console.log(i, k, C.length, ...C);\r\n\r\n  console.log(A);\r\n  if ((i = B.length)) {\r\n    // Copy C to A\r\n    A.splice(k, C.length, ...C);\r\n  } else {\r\n    // Copy B to A\r\n    A.splice(k, B.length, ...B);\r\n  }\r\n  // yield { A, array: true };\r\n  console.log(A);\r\n  return A;\r\n}\r\n\r\nfunction Merge2(arr1, arr2, results, fullArray) {\r\n  // console.log(\"DEBUG: Merging these\");\r\n  // console.log(arr1, arr2);\r\n  let sorted = [];\r\n\r\n  while (arr1.length && arr2.length) {\r\n    if (arr1[0] < arr2[0]) {\r\n      sorted.push(arr1.shift());\r\n    } else {\r\n      sorted.push(arr2.shift());\r\n    }\r\n  }\r\n  let concated = sorted.concat(arr1.slice().concat(arr2.slice()));\r\n  const step: Steps = { A: fullArray.slice(), currentIdx: 0, comparingIdx: 0 };\r\n  results.push(step);\r\n  return concated;\r\n}\r\n\r\n// Quicksort with Hoare partioning\r\n// Hoares partioning is faster but harder to implement\r\n// Lumuto is slower but easier to understand/implement\r\n\r\nfunction* GenQuickSort(A: number[]) {\r\n  // const temp = [...A].sort((a, b) => a - b);\r\n  // console.log(temp, A);\r\n\r\n  // Sort the algorithm and return steps]\r\n  const results: Steps[] = [];\r\n\r\n  // Async/await for the quicksort to finish before yielding values\r\n  QuickSort(A, 0, A.length - 1, results);\r\n  console.log(\"QuickSort Complete\", A);\r\n\r\n  while (results.length > 0) {\r\n    let a = results.shift();\r\n    yield a;\r\n  }\r\n}\r\n\r\n// Some implementation help from\r\n// https://humanwhocodes.com/blog/2012/11/27/computer-science-in-javascript-quicksort/\r\n\r\nfunction QuickSort(A: number[], lo, hi, results) {\r\n  // console.log(\"New Quicksort\", A, lo, hi);\r\n  // console.log(JSON.stringify(results));\r\n  let s;\r\n  if (A.length > 1) {\r\n    s = HoarePartition(A, lo, hi, results);\r\n    if (lo < s - 1) {\r\n      QuickSort(A, lo, s - 1, results);\r\n    }\r\n    if (s < hi) {\r\n      QuickSort(A, s, hi, results);\r\n    }\r\n  }\r\n  return A;\r\n}\r\n\r\nfunction HoarePartition(A: number[], lo, hi, results) {\r\n  let p = A[Math.floor((lo + hi) / 2)],\r\n    i = lo,\r\n    j = hi;\r\n\r\n  // Move indexes towards each other until they meet\r\n  while (i <= j) {\r\n    while (A[i] < p) {\r\n      i++;\r\n      const step: Steps = { A: A.slice(), currentIdx: i, comparingIdx: j };\r\n      results.push(step);\r\n    }\r\n    while (A[j] > p) {\r\n      j--;\r\n      const step: Steps = { A: A.slice(), currentIdx: i, comparingIdx: j };\r\n      results.push(step);\r\n    }\r\n    if (i <= j) {\r\n      Swap(A, i, j);\r\n      const step: Steps = { A: A.slice(), currentIdx: i, comparingIdx: j };\r\n      results.push(step);\r\n\r\n      i++;\r\n      j--;\r\n    }\r\n  }\r\n  return i;\r\n}\r\n\r\n// Helper Functions\r\n\r\n// Swap Utility Function\r\nfunction Swap(A: number[], lo: number, hi: number) {\r\n  if (lo === hi) {\r\n    return;\r\n  }\r\n\r\n  let temp = A[lo];\r\n  A[lo] = A[hi];\r\n  A[hi] = temp;\r\n}\r\n\r\nfunction generateRandomArray(n: number) {\r\n  let arr = [];\r\n  for (let i = 0; i < n; i++) {\r\n    let rand = Math.floor(Math.random() * 100);\r\n    arr.push(rand);\r\n  }\r\n  return arr;\r\n}\r\n\r\ninterface Steps {\r\n  A: number[];\r\n  currentIdx?: number;\r\n  comparingIdx?: number;\r\n  stackDepth?: number;\r\n}\r\n\r\nexport {\r\n  SelectionSort,\r\n  InsertionSort,\r\n  generateRandomArray,\r\n  MergeSort,\r\n  GenQuickSort,\r\n  GenMergeSort,\r\n  QuickSort,\r\n  Merge,\r\n  Swap,\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SortComponent } from './pages/sort/sort.component';\r\nimport { SearchComponent } from './pages/search/search.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { CryptoComponent } from './pages/crypto/crypto.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'sort', component: SortComponent },\r\n  { path: 'search', component: SearchComponent },\r\n  { path: '', component: HomeComponent },\r\n  { path: 'crypto', component: CryptoComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'client-v1';\r\n}\r\n","<app-main-nav></app-main-nav>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MainNavComponent } from './main-nav/main-nav.component';\r\n\r\n// Material Modules\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\n\r\nimport { SortComponent } from './pages/sort/sort.component';\r\nimport { SearchComponent } from './pages/search/search.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { CryptoComponent } from './pages/crypto/crypto.component';\r\nimport { NodeComponent } from './pages/search/Node/node.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MainNavComponent,\r\n    SortComponent,\r\n    SearchComponent,\r\n    HomeComponent,\r\n    CryptoComponent,\r\n    NodeComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    LayoutModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatSliderModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component } from '@angular/core';\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { Observable } from 'rxjs';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-main-nav',\r\n  templateUrl: './main-nav.component.html',\r\n  styleUrls: ['./main-nav.component.scss']\r\n})\r\nexport class MainNavComponent {\r\n\r\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map(result => result.matches),\r\n      shareReplay()\r\n    );\r\n\r\n  constructor(private breakpointObserver: BreakpointObserver) {}\r\n\r\n}\r\n","<mat-sidenav-container class=\"sidenav-container\">\r\n  <mat-sidenav\r\n    #drawer\r\n    class=\"sidenav\"\r\n    fixedInViewport=\"true\"\r\n    [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\r\n    [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\r\n    [opened]=\"!(isHandset$ | async)\"\r\n  >\r\n    <mat-toolbar color=\"secondary\">Menu</mat-toolbar>\r\n    <mat-nav-list>\r\n      <a mat-list-item routerLink=\"\">Home</a>\r\n      <a mat-list-item routerLink=\"sort\">Sorting Algorithms</a>\r\n      <a mat-list-item routerLink=\"search\">Search Algorithms</a>\r\n      <a mat-list-item routerLink=\"crypto\">Cryptography</a>\r\n    </mat-nav-list>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content>\r\n    <mat-toolbar color=\"primary\">\r\n      <button\r\n        type=\"button\"\r\n        aria-label=\"Toggle sidenav\"\r\n        mat-icon-button\r\n        (click)=\"drawer.toggle()\"\r\n        *ngIf=\"isHandset$ | async\"\r\n      >\r\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\r\n      </button>\r\n      <span>DC Algorithms Visualizer Website</span>\r\n    </mat-toolbar>\r\n    <!-- Add Content Here -->\r\n    <div class=\"main\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-crypto',\r\n  templateUrl: './crypto.component.html',\r\n  styleUrls: ['./crypto.component.scss']\r\n})\r\nexport class CryptoComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>crypto works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h2>\r\n  Welcome to DC Algorithm Sorting Visualizer\r\n</h2>\r\n<p>\r\n  This website will contain visualizations of various algorithms and other side\r\n  projects related to my university subjects. I am making this site for both\r\n  practice and deepening my understanding of content. Furthermore, in the hopes\r\n  that maybe it might be amusing to others too.\r\n</p>\r\n<h2 class=\"social-links\">\r\n  <a target=\"_blank\" href=\"https://github.com/domainance\"\r\n    ><i class=\"fab fa-github\"></i\r\n  ></a>\r\n  <a href=\"https://codepen.io/domainance\"><i class=\"fab fa-codepen\"></i></a>\r\n</h2>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-node',\r\n  templateUrl: './node.component.html',\r\n  styleUrls: ['./node.component.scss'],\r\n})\r\nexport class NodeComponent implements OnInit {\r\n  nodeSize: number;\r\n\r\n  @Input() numNodes: number;\r\n  @Input() isStart: boolean;\r\n  @Input() isEnd: boolean;\r\n  @Input() position: number[];\r\n\r\n  constructor() {\r\n    // Nodesize in px\r\n    this.nodeSize = 16;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  styleNode() {\r\n    let style = {\r\n      'height.px': this.nodeSize,\r\n      'width.px': this.nodeSize,\r\n    };\r\n    style['border'] = '0.5px solid blue';\r\n    if (this.isStart === true) {\r\n      style['background-color'] = 'blue';\r\n      return style;\r\n    } else if (this.isEnd === true) {\r\n      style['background-color'] = 'pink';\r\n      return style;\r\n    } else {\r\n      return style;\r\n    }\r\n  }\r\n\r\n  // Testing Function to give information about a particular node\r\n  test() {\r\n    console.log(this.position);\r\n  }\r\n}\r\n","<div class=\"node\" [ngStyle]=\"styleNode()\" (click)=\"test()\"></div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NodeComponent } from './Node/node.component';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.scss'],\r\n})\r\nexport class SearchComponent implements OnInit {\r\n  // Grid Related Initialization\r\n  // Although the indexes are fine, why does increasing numCols increase the displayed ROWS and numRows increase COLS??\r\n  numCols = Array(40);\r\n  numRows = Array(20);\r\n  startNode = [10, 10];\r\n  endNode = [30, 10];\r\n\r\n  // Grid is a 2-d array\r\n  grid: [];\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  initializeGrid() {\r\n    const grid = [];\r\n  }\r\n\r\n  isStart(pos): boolean {\r\n    if (JSON.stringify(pos) === JSON.stringify(this.startNode)) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  isEnd(pos): boolean {\r\n    if (JSON.stringify(pos) === JSON.stringify(this.endNode)) {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <button>Start Search</button>\r\n  <div class=\"grid-container\">\r\n    <div *ngFor=\"let rows of numRows; let rowIndex = index\" class=\"row\">\r\n      <div *ngFor=\"let cols of numCols; let colIndex = index\" class=\"col\">\r\n        <app-node\r\n          [numNodes]=\"25\"\r\n          [isStart]=\"isStart([colIndex, rowIndex])\"\r\n          [isEnd]=\"isEnd([colIndex, rowIndex])\"\r\n          [position]=\"[colIndex, rowIndex]\"\r\n        ></app-node>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport * as Sort from '../../algorithms/sort';\r\n\r\n@Component({\r\n  selector: 'app-sort',\r\n  templateUrl: './sort.component.html',\r\n  styleUrls: ['./sort.component.scss'],\r\n})\r\nexport class SortComponent implements OnInit {\r\n  // Rendering Variables\r\n  scaledBarWidth: number;\r\n  unsortedArray: number[] = [];\r\n  sortedArray: number[];\r\n  currentIdx: number;\r\n  comparingIdx: number;\r\n  currentIdxColor = 'green';\r\n  comparingIdxColor = '#FF4081';\r\n\r\n  // Adjustable Params\r\n  arrayLength = 25;\r\n  sortSpeed = 30;\r\n  sortInProgress = false;\r\n\r\n  // Function reference\r\n  selectedAlgorithm: any;\r\n  selectedAlgorithmName: string;\r\n\r\n  constructor() {\r\n    this.unsortedArray = Sort.generateRandomArray(this.arrayLength);\r\n    this.scaledBarWidth = window.innerWidth * 0.7;\r\n    // Default to selection sort\r\n    this.selectedAlgorithm = Sort.SelectionSort;\r\n    this.selectedAlgorithmName = 'Selection Sort';\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  // Idea behind animation is to conditionally style each array element based on its index\r\n  styleBackground(arr: number[], n: number): Object {\r\n    let style = {\r\n      'height.px': arr[n].valueOf() * 4,\r\n      'width.px': this.scaledBarWidth,\r\n    };\r\n    if (this.currentIdx == n) {\r\n      style['background-color'] = this.currentIdxColor;\r\n      return style;\r\n    } else if (this.comparingIdx == n) {\r\n      style['background-color'] = this.comparingIdxColor;\r\n      return style;\r\n    } else {\r\n      style['background-color'] = '#3F51B5';\r\n      return style;\r\n    }\r\n  }\r\n\r\n  // Could have had seperate functions for each sort\r\n  // I basically need 2 values - the current index and comparing index\r\n  loadAlgorithm(algo: string) {\r\n    switch (algo) {\r\n      case 'SelectionSort':\r\n        console.log('SelectionSort Loaded');\r\n        this.selectedAlgorithm = Sort.SelectionSort;\r\n        break;\r\n      case 'InsertionSort':\r\n        console.log('InsertionSort Loaded');\r\n        this.selectedAlgorithm = Sort.InsertionSort;\r\n        break;\r\n      case 'MergeSort':\r\n        console.log('MergeSort Loaded');\r\n        this.selectedAlgorithm = Sort.GenMergeSort;\r\n        break;\r\n      case 'QuickSort':\r\n        console.log('QuickSort Loaded');\r\n        this.selectedAlgorithm = Sort.GenQuickSort;\r\n        break;\r\n      default:\r\n        console.log('Default switch');\r\n    }\r\n  }\r\n\r\n  sort() {\r\n    this.sortInProgress = true;\r\n\r\n    this.loadAlgorithm(this.selectedAlgorithmName);\r\n    let A = this.unsortedArray;\r\n\r\n    // Adapted from\r\n    // https://stackoverflow.com/questions/59164452/javascript-settimeout-order-of-execution\r\n    const timer = (ms) => new Promise((res) => setTimeout(res, ms));\r\n\r\n    let stepper = this.selectedAlgorithm(A),\r\n      done = false;\r\n    (async () => {\r\n      while (!done) {\r\n        // visualization here\r\n\r\n        let temp = stepper.next();\r\n        done = temp.done;\r\n        console.log(temp.value);\r\n\r\n        if (temp.done) {\r\n          // Sort is over\r\n          this.currentIdx = null;\r\n          this.comparingIdx = null;\r\n          this.sortInProgress = false;\r\n          break;\r\n        } else {\r\n          this.unsortedArray = temp.value['A'];\r\n          this.currentIdx = temp.value['currentIdx'];\r\n          this.comparingIdx = temp.value['comparingIdx'];\r\n        }\r\n\r\n        console.log(temp.done);\r\n        // Each animation frame will resolve every x ms\r\n        await timer(1000 / this.sortSpeed);\r\n      }\r\n    })();\r\n  }\r\n\r\n  generateRandomArray() {\r\n    this.unsortedArray = Sort.generateRandomArray(this.arrayLength);\r\n    this.currentIdx = null;\r\n    this.comparingIdx = null;\r\n  }\r\n}\r\n","<mat-form-field appearance=\"fill\">\r\n  <mat-label>Select an algorithm</mat-label>\r\n  <mat-select [(value)]=\"selectedAlgorithmName\" required>\r\n    <mat-option value=\"SelectionSort\">Selection Sort</mat-option>\r\n    <mat-option value=\"InsertionSort\">Insertion Sort</mat-option>\r\n    <mat-option value=\"MergeSort\">Merge Sort</mat-option>\r\n    <mat-option value=\"QuickSort\">Quick Sort</mat-option>\r\n  </mat-select>\r\n</mat-form-field>\r\n<div class=\"wrap\">\r\n  <button\r\n    mat-raised-button\r\n    color=\"primary\"\r\n    [disabled]=\"sortInProgress\"\r\n    (click)=\"sort()\"\r\n  >\r\n    Start Sort\r\n  </button>\r\n  <button\r\n    mat-raised-button\r\n    color=\"primary\"\r\n    (click)=\"generateRandomArray()\"\r\n    [disabled]=\"sortInProgress\"\r\n  >\r\n    Generate New Array\r\n  </button>\r\n\r\n  <div class=\"control-container\">\r\n    <p>Array Length</p>\r\n    <mat-slider\r\n      min=\"1\"\r\n      max=\"100\"\r\n      step=\"1\"\r\n      tickInterval=\"20\"\r\n      thumbLabel\r\n      [(value)]=\"arrayLength\"\r\n    ></mat-slider>\r\n  </div>\r\n  <div class=\"control-container\">\r\n    <p>Sorting Speed</p>\r\n    <mat-slider\r\n      min=\"1\"\r\n      max=\"100\"\r\n      step=\"1\"\r\n      tickInterval=\"20\"\r\n      thumbLabel\r\n      [(value)]=\"sortSpeed\"\r\n    ></mat-slider>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"array-container\">\r\n  <ul class=\"array\">\r\n    <li\r\n      class=\"item\"\r\n      *ngFor=\"let n of unsortedArray; let indexOfElement = index\"\r\n      [ngStyle]=\"styleBackground(unsortedArray, indexOfElement)\"\r\n    ></li>\r\n  </ul>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}